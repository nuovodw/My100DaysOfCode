/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	font-family: 'Lato', sans-serif;
	font-weight: 400;
	font-size: 16px;
	line-height: 1.7;
	color: #777;
	padding: 30px;
}

/* Header */

.header {
	height: 95vh;
	background-image: linear-gradient(to right bottom, #7ed56f25, #28b485),
		url(../img/hero.jpg);
	background-size: cover; /*fits inside the window*/
	background-position: top; /*top remains the same when resized*/
	clip-path: polygon(0 0, 100% 0, 100% 75%, 0% 100%);
	position: relative;
}

.logo-box {
	position: absolute;
	top: 40px;
	left: 40px;
}

.logo {
	height: 35px;
}

.text-box {
	position: absolute;
	top: 40%; /*places top of the box 40% down from the parent box*/
	left: 50%; /*places left of the box at halfway from left side of parent box*/
	transform: translate(-50%, -50%); /*in relation to the element itself*/
	text-align: center;
}

.heading-primary {
	color: #fff;
	text-transform: uppercase;
	margin-bottom: 60px;

	/* if the animation shakes at the end, use this fix: */
	backface-visibility: hidden;
}

.heading-primary-main {
	display: block; /*split the sentence into two lines*/
	font-size: 60px;
	font-weight: 400;
	letter-spacing: 35px;

	/* Shorthand version for below --> 
   animation: moveInRight 1s ease-out; */
	animation-name: moveInLeft;
	animation-duration: 1s;
	animation-timing-function: ease-out;
	/* animation-iteration-count: 3; */
	/* animation-delay: 3s; */
}

.heading-primary-sub {
	display: block; /*split the sentence into two lines*/
	font-size: 20px;
	font-weight: 700;
	letter-spacing: 17.4px;

	animation: moveInRight 1s ease-out;
}

/* CSS Animations */
@keyframes moveInLeft {
	0% {
		/*before the animation starts*/
		opacity: 0;
		transform: translateX(-100px) /*rotate(100deg)*/; /* x goes from left to right | the animation begins 100px left of the original location*/
	}
	/* 60% {
		transform: rotate(120deg);
	} */
	80% {
		transform: translateX(10px);
		/* will move 10px over to the right of the original place  */
	}

	100% {
		/*animation finishes*/
		opacity: 1;
		transform: translate(
			0
		); /* this is the way it looks now (the final version) */
	}
}

@keyframes moveInRight {
	0% {
		/*before the animation starts*/
		opacity: 0;
		transform: translateX(
			100px
		); /* x goes from right to left | the animation begins 100px right of the original location*/
	}

	80% {
		transform: translateX(-10px);
		/* will move 10px over to the left of the original place  */
	}

	100% {
		/*animation finishes*/
		opacity: 1;
		transform: translate(
			0
		); /* this is the way it looks now (the final version) */
	}
}

@keyframes moveInUp {
	0% {
		/*before the animation starts*/
		opacity: 0;
		transform: translateY(
			30px
		); /* x goes from right to left | the animation begins 100px right of the original location*/
	}

	100% {
		/*animation finishes*/
		opacity: 1;
		transform: translate(
			0
		); /* this is the way it looks now (the final version) */
	}
}

/* Animated Button */

/* Animated on hover and press */
.btn:link,
.btn:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 15px 40px;

	/* :hover DOES NOT work without thisðŸ¤”*/
	display: inline-block;

	border-radius: 40px;
	transition: all 0.2s;

	/* Set reference point for absolute positioning for .btn::after   */
	position: relative;
}

.btn:hover {
	transform: translateY(-3px);
	/* Y axis moves top to bottom. In order to move UP, we need to use negative number. */
	box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
	/* offset-x | offset-y | blur-radius | color & opacity */
}

.btn:active {
	transform: translateY(-1px);
	box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
	background-color: #fff;
	color: #777;
}

/* Button zooms out on hover and back in  */

.btn::after {
	/*must specify the content property, even if it's empty*/
	content: '';

	/* Make the button look the same as the original */
	display: inline-block;
	height: 100%; /* 100% of the orignial btn*/
	width: 100%; /* 100% of the orignial btn*/
	border-radius: 100px;

	/* place the btn behind the original  */
	position: absolute; /*Must first set orinignal position (reference) of the original .btn to relative*/
	top: 0;
	left: 0;

	/* Hide behind the orinigal button */
	z-index: -1;

	/* Must put the transition herer (initial state): .btn::after  */
	transition: all 0.4s;
}

.btn-white::after {
	background-color: white;
}

/* Hover over the button and then pseud-style will take effect */
.btn:hover::after {
	transform: scaleX(1.4) scaleY(1.6); /*Enlarge the size*/

	/* Put the transition-property on the initial state: .btn::after  */

	/* Element fades out using opacity  */
	opacity: 0;
}

/* button appears from bottom at start  */
.btn-animated {
	animation: moveInUp 0.5s ease-out 0.75s;

	/* Automatically set the start to the 0% of the @keyframe moveInUp */
	animation-fill-mode: backwards;
}
